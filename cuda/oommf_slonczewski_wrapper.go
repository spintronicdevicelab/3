package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import(
	"unsafe"
	"github.com/mumax/3/cuda/cu"
	"sync"
)

// CUDA handle for addoommfslonczewskitorque kernel
var addoommfslonczewskitorque_code cu.Function

// Stores the arguments for addoommfslonczewskitorque kernel invocation
type addoommfslonczewskitorque_args_t struct{
	 arg_tx unsafe.Pointer
	 arg_ty unsafe.Pointer
	 arg_tz unsafe.Pointer
	 arg_mx unsafe.Pointer
	 arg_my unsafe.Pointer
	 arg_mz unsafe.Pointer
	 arg_jz unsafe.Pointer
	 arg_pxLUT unsafe.Pointer
	 arg_pyLUT unsafe.Pointer
	 arg_pzLUT unsafe.Pointer
	 arg_msatLUT unsafe.Pointer
	 arg_alphaLUT unsafe.Pointer
	 arg_flt float32
	 arg_pfixLUT unsafe.Pointer
	 arg_pfreeLUT unsafe.Pointer
	 arg_lambdafixLUT unsafe.Pointer
	 arg_lambdafreeLUT unsafe.Pointer
	 arg_epsilonPrimeLUT unsafe.Pointer
	 arg_regions unsafe.Pointer
	 arg_N int
	 argptr [20]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for addoommfslonczewskitorque kernel invocation
var addoommfslonczewskitorque_args addoommfslonczewskitorque_args_t

func init(){
	// CUDA driver kernel call wants pointers to arguments, set them up once.
	 addoommfslonczewskitorque_args.argptr[0] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_tx)
	 addoommfslonczewskitorque_args.argptr[1] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_ty)
	 addoommfslonczewskitorque_args.argptr[2] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_tz)
	 addoommfslonczewskitorque_args.argptr[3] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_mx)
	 addoommfslonczewskitorque_args.argptr[4] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_my)
	 addoommfslonczewskitorque_args.argptr[5] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_mz)
	 addoommfslonczewskitorque_args.argptr[6] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_jz)
	 addoommfslonczewskitorque_args.argptr[7] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_pxLUT)
	 addoommfslonczewskitorque_args.argptr[8] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_pyLUT)
	 addoommfslonczewskitorque_args.argptr[9] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_pzLUT)
	 addoommfslonczewskitorque_args.argptr[10] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_msatLUT)
	 addoommfslonczewskitorque_args.argptr[11] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_alphaLUT)
	 addoommfslonczewskitorque_args.argptr[12] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_flt)
	 addoommfslonczewskitorque_args.argptr[13] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_pfixLUT)
	 addoommfslonczewskitorque_args.argptr[14] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_pfreeLUT)
	 addoommfslonczewskitorque_args.argptr[15] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_lambdafixLUT)
	 addoommfslonczewskitorque_args.argptr[16] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_lambdafreeLUT)
	 addoommfslonczewskitorque_args.argptr[17] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_epsilonPrimeLUT)
	 addoommfslonczewskitorque_args.argptr[18] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_regions)
	 addoommfslonczewskitorque_args.argptr[19] = unsafe.Pointer(&addoommfslonczewskitorque_args.arg_N)
	 }

// Wrapper for addoommfslonczewskitorque CUDA kernel, asynchronous.
func k_addoommfslonczewskitorque_async ( tx unsafe.Pointer, ty unsafe.Pointer, tz unsafe.Pointer, mx unsafe.Pointer, my unsafe.Pointer, mz unsafe.Pointer, jz unsafe.Pointer, pxLUT unsafe.Pointer, pyLUT unsafe.Pointer, pzLUT unsafe.Pointer, msatLUT unsafe.Pointer, alphaLUT unsafe.Pointer, flt float32, pfixLUT unsafe.Pointer, pfreeLUT unsafe.Pointer, lambdafixLUT unsafe.Pointer, lambdafreeLUT unsafe.Pointer, epsilonPrimeLUT unsafe.Pointer, regions unsafe.Pointer, N int,  cfg *config) {
	if Synchronous{ // debug
		Sync()
	}

	addoommfslonczewskitorque_args.Lock()
	defer addoommfslonczewskitorque_args.Unlock()

	if addoommfslonczewskitorque_code == 0{
		addoommfslonczewskitorque_code = fatbinLoad(addoommfslonczewskitorque_map, "addoommfslonczewskitorque")
	}

	 addoommfslonczewskitorque_args.arg_tx = tx
	 addoommfslonczewskitorque_args.arg_ty = ty
	 addoommfslonczewskitorque_args.arg_tz = tz
	 addoommfslonczewskitorque_args.arg_mx = mx
	 addoommfslonczewskitorque_args.arg_my = my
	 addoommfslonczewskitorque_args.arg_mz = mz
	 addoommfslonczewskitorque_args.arg_jz = jz
	 addoommfslonczewskitorque_args.arg_pxLUT = pxLUT
	 addoommfslonczewskitorque_args.arg_pyLUT = pyLUT
	 addoommfslonczewskitorque_args.arg_pzLUT = pzLUT
	 addoommfslonczewskitorque_args.arg_msatLUT = msatLUT
	 addoommfslonczewskitorque_args.arg_alphaLUT = alphaLUT
	 addoommfslonczewskitorque_args.arg_flt = flt
	 addoommfslonczewskitorque_args.arg_pfixLUT = pfixLUT
	 addoommfslonczewskitorque_args.arg_pfreeLUT = pfreeLUT
	 addoommfslonczewskitorque_args.arg_lambdafixLUT = lambdafixLUT
	 addoommfslonczewskitorque_args.arg_lambdafreeLUT = lambdafreeLUT
	 addoommfslonczewskitorque_args.arg_epsilonPrimeLUT = epsilonPrimeLUT
	 addoommfslonczewskitorque_args.arg_regions = regions
	 addoommfslonczewskitorque_args.arg_N = N
	

	args := addoommfslonczewskitorque_args.argptr[:]
	cu.LaunchKernel(addoommfslonczewskitorque_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, stream0, args)

	if Synchronous{ // debug
		Sync()
	}
}

// maps compute capability on PTX code for addoommfslonczewskitorque kernel.
var addoommfslonczewskitorque_map = map[int]string{ 0: "" ,
20: addoommfslonczewskitorque_ptx_20 ,
30: addoommfslonczewskitorque_ptx_30 ,
35: addoommfslonczewskitorque_ptx_35  }

// addoommfslonczewskitorque PTX code for various compute capabilities.
const(
  addoommfslonczewskitorque_ptx_20 = `
.version 4.1
.target sm_20
.address_size 64


.visible .entry addoommfslonczewskitorque(
	.param .u64 addoommfslonczewskitorque_param_0,
	.param .u64 addoommfslonczewskitorque_param_1,
	.param .u64 addoommfslonczewskitorque_param_2,
	.param .u64 addoommfslonczewskitorque_param_3,
	.param .u64 addoommfslonczewskitorque_param_4,
	.param .u64 addoommfslonczewskitorque_param_5,
	.param .u64 addoommfslonczewskitorque_param_6,
	.param .u64 addoommfslonczewskitorque_param_7,
	.param .u64 addoommfslonczewskitorque_param_8,
	.param .u64 addoommfslonczewskitorque_param_9,
	.param .u64 addoommfslonczewskitorque_param_10,
	.param .u64 addoommfslonczewskitorque_param_11,
	.param .f32 addoommfslonczewskitorque_param_12,
	.param .u64 addoommfslonczewskitorque_param_13,
	.param .u64 addoommfslonczewskitorque_param_14,
	.param .u64 addoommfslonczewskitorque_param_15,
	.param .u64 addoommfslonczewskitorque_param_16,
	.param .u64 addoommfslonczewskitorque_param_17,
	.param .u64 addoommfslonczewskitorque_param_18,
	.param .u32 addoommfslonczewskitorque_param_19
)
{
	.reg .pred 	%p<7>;
	.reg .s32 	%r<23>;
	.reg .f32 	%f<103>;
	.reg .s64 	%rd<62>;
	.reg .f64 	%fd<3>;


	ld.param.u64 	%rd2, [addoommfslonczewskitorque_param_0];
	ld.param.u64 	%rd3, [addoommfslonczewskitorque_param_1];
	ld.param.u64 	%rd4, [addoommfslonczewskitorque_param_2];
	ld.param.u64 	%rd5, [addoommfslonczewskitorque_param_3];
	ld.param.u64 	%rd6, [addoommfslonczewskitorque_param_4];
	ld.param.u64 	%rd7, [addoommfslonczewskitorque_param_5];
	ld.param.u64 	%rd8, [addoommfslonczewskitorque_param_6];
	ld.param.u64 	%rd9, [addoommfslonczewskitorque_param_7];
	ld.param.u64 	%rd10, [addoommfslonczewskitorque_param_8];
	ld.param.u64 	%rd11, [addoommfslonczewskitorque_param_9];
	ld.param.u64 	%rd12, [addoommfslonczewskitorque_param_10];
	ld.param.u64 	%rd13, [addoommfslonczewskitorque_param_11];
	ld.param.f32 	%f28, [addoommfslonczewskitorque_param_12];
	ld.param.u64 	%rd14, [addoommfslonczewskitorque_param_13];
	ld.param.u64 	%rd15, [addoommfslonczewskitorque_param_14];
	ld.param.u64 	%rd16, [addoommfslonczewskitorque_param_15];
	ld.param.u64 	%rd17, [addoommfslonczewskitorque_param_16];
	ld.param.u64 	%rd18, [addoommfslonczewskitorque_param_17];
	ld.param.u64 	%rd19, [addoommfslonczewskitorque_param_18];
	ld.param.u32 	%r1, [addoommfslonczewskitorque_param_19];
	mov.u32 	%r2, %nctaid.x;
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	setp.ge.s32	%p1, %r8, %r1;
	@%p1 bra 	BB0_9;

	cvta.to.global.u64 	%rd20, %rd19;
	cvt.s64.s32	%rd21, %r8;
	cvta.to.global.u64 	%rd22, %rd5;
	mul.wide.s32 	%rd23, %r8, 4;
	add.s64 	%rd24, %rd22, %rd23;
	ld.global.f32 	%f1, [%rd24];
	cvta.to.global.u64 	%rd25, %rd6;
	add.s64 	%rd26, %rd25, %rd23;
	ld.global.f32 	%f2, [%rd26];
	cvta.to.global.u64 	%rd27, %rd7;
	add.s64 	%rd28, %rd27, %rd23;
	ld.global.f32 	%f3, [%rd28];
	cvta.to.global.u64 	%rd29, %rd8;
	add.s64 	%rd30, %rd29, %rd23;
	ld.global.f32 	%f4, [%rd30];
	add.s64 	%rd31, %rd20, %rd21;
	ld.global.u8 	%rd1, [%rd31];
	cvta.to.global.u64 	%rd32, %rd9;
	shl.b64 	%rd33, %rd1, 2;
	add.s64 	%rd34, %rd32, %rd33;
	cvta.to.global.u64 	%rd35, %rd10;
	add.s64 	%rd36, %rd35, %rd33;
	cvta.to.global.u64 	%rd37, %rd11;
	add.s64 	%rd38, %rd37, %rd33;
	ld.global.f32 	%f5, [%rd34];
	ld.global.f32 	%f6, [%rd36];
	mul.f32 	%f29, %f6, %f6;
	fma.rn.f32 	%f30, %f5, %f5, %f29;
	ld.global.f32 	%f7, [%rd38];
	fma.rn.f32 	%f31, %f7, %f7, %f30;
	sqrt.rn.f32 	%f8, %f31;
	setp.neu.f32	%p2, %f8, 0f00000000;
	@%p2 bra 	BB0_3;

	mov.f32 	%f101, 0f00000000;
	bra.uni 	BB0_4;

BB0_3:
	rcp.rn.f32 	%f101, %f8;

BB0_4:
	mul.f32 	%f11, %f101, %f5;
	mul.f32 	%f12, %f101, %f6;
	mul.f32 	%f13, %f101, %f7;
	cvta.to.global.u64 	%rd39, %rd12;
	add.s64 	%rd41, %rd39, %rd33;
	ld.global.f32 	%f14, [%rd41];
	setp.eq.f32	%p3, %f14, 0f00000000;
	setp.eq.f32	%p4, %f4, 0f00000000;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	BB0_9;

	cvta.to.global.u64 	%rd42, %rd13;
	add.s64 	%rd44, %rd42, %rd33;
	ld.global.f32 	%f15, [%rd44];
	cvta.to.global.u64 	%rd45, %rd14;
	add.s64 	%rd46, %rd45, %rd33;
	ld.global.f32 	%f16, [%rd46];
	cvta.to.global.u64 	%rd47, %rd15;
	add.s64 	%rd48, %rd47, %rd33;
	ld.global.f32 	%f17, [%rd48];
	cvta.to.global.u64 	%rd49, %rd16;
	add.s64 	%rd50, %rd49, %rd33;
	ld.global.f32 	%f33, [%rd50];
	cvta.to.global.u64 	%rd51, %rd17;
	add.s64 	%rd52, %rd51, %rd33;
	ld.global.f32 	%f34, [%rd52];
	cvta.to.global.u64 	%rd53, %rd18;
	add.s64 	%rd54, %rd53, %rd33;
	ld.global.f32 	%f18, [%rd54];
	add.f32 	%f35, %f28, %f28;
	mul.f32 	%f36, %f35, %f14;
	div.rn.f32 	%f19, %f4, %f36;
	mul.f32 	%f20, %f34, %f34;
	add.f32 	%f37, %f20, 0f3F800000;
	sqrt.rn.f32 	%f21, %f37;
	mul.f32 	%f22, %f33, %f33;
	add.f32 	%f38, %f22, 0f3F800000;
	sqrt.rn.f32 	%f23, %f38;
	add.f32 	%f39, %f20, 0fBF800000;
	sqrt.rn.f32 	%f24, %f39;
	add.f32 	%f40, %f22, 0fBF800000;
	sqrt.rn.f32 	%f25, %f40;
	setp.gt.f32	%p6, %f24, 0f00000000;
	@%p6 bra 	BB0_7;

	mov.f32 	%f102, 0f3F800000;
	bra.uni 	BB0_8;

BB0_7:
	div.rn.f32 	%f102, %f25, %f24;

BB0_8:
	cvt.f64.f32	%fd1, %f19;
	mul.f64 	%fd2, %fd1, 0d3CC7B6EF14E9250C;
	cvt.rn.f32.f64	%f42, %fd2;
	div.rn.f32 	%f43, %f21, %f23;
	mul.f32 	%f44, %f16, %f22;
	mul.f32 	%f45, %f44, %f43;
	mul.f32 	%f46, %f17, %f20;
	mul.f32 	%f47, %f46, %f102;
	add.f32 	%f48, %f45, %f47;
	sub.f32 	%f49, %f45, %f47;
	mul.f32 	%f50, %f12, %f2;
	fma.rn.f32 	%f51, %f11, %f1, %f50;
	fma.rn.f32 	%f52, %f13, %f3, %f51;
	mul.f32 	%f53, %f24, %f25;
	mul.f32 	%f54, %f53, %f52;
	mul.f32 	%f55, %f21, %f23;
	add.f32 	%f56, %f55, %f54;
	sub.f32 	%f57, %f55, %f54;
	div.rn.f32 	%f58, %f48, %f56;
	div.rn.f32 	%f59, %f49, %f57;
	sub.f32 	%f60, %f58, %f59;
	mul.f32 	%f61, %f42, %f60;
	fma.rn.f32 	%f62, %f15, %f15, 0f3F800000;
	rcp.rn.f32 	%f63, %f62;
	mul.f32 	%f64, %f42, %f18;
	mul.f32 	%f65, %f15, %f64;
	sub.f32 	%f66, %f61, %f65;
	mul.f32 	%f67, %f63, %f66;
	mul.f32 	%f68, %f15, %f61;
	sub.f32 	%f69, %f64, %f68;
	mul.f32 	%f70, %f63, %f69;
	mul.f32 	%f71, %f13, %f2;
	mul.f32 	%f72, %f12, %f3;
	sub.f32 	%f73, %f72, %f71;
	mul.f32 	%f74, %f11, %f3;
	mul.f32 	%f75, %f13, %f1;
	sub.f32 	%f76, %f75, %f74;
	mul.f32 	%f77, %f12, %f1;
	mul.f32 	%f78, %f11, %f2;
	sub.f32 	%f79, %f78, %f77;
	mul.f32 	%f80, %f2, %f79;
	mul.f32 	%f81, %f3, %f76;
	sub.f32 	%f82, %f80, %f81;
	mul.f32 	%f83, %f3, %f73;
	mul.f32 	%f84, %f1, %f79;
	sub.f32 	%f85, %f83, %f84;
	mul.f32 	%f86, %f1, %f76;
	mul.f32 	%f87, %f2, %f73;
	sub.f32 	%f88, %f86, %f87;
	mul.f32 	%f89, %f70, %f73;
	fma.rn.f32 	%f90, %f67, %f82, %f89;
	cvta.to.global.u64 	%rd55, %rd2;
	mul.wide.s32 	%rd56, %r8, 4;
	add.s64 	%rd57, %rd55, %rd56;
	ld.global.f32 	%f91, [%rd57];
	add.f32 	%f92, %f91, %f90;
	st.global.f32 	[%rd57], %f92;
	mul.f32 	%f93, %f70, %f76;
	fma.rn.f32 	%f94, %f67, %f85, %f93;
	cvta.to.global.u64 	%rd58, %rd3;
	add.s64 	%rd59, %rd58, %rd56;
	ld.global.f32 	%f95, [%rd59];
	add.f32 	%f96, %f95, %f94;
	st.global.f32 	[%rd59], %f96;
	mul.f32 	%f97, %f70, %f79;
	fma.rn.f32 	%f98, %f67, %f88, %f97;
	cvta.to.global.u64 	%rd60, %rd4;
	add.s64 	%rd61, %rd60, %rd56;
	ld.global.f32 	%f99, [%rd61];
	add.f32 	%f100, %f99, %f98;
	st.global.f32 	[%rd61], %f100;

BB0_9:
	ret;
}


`
   addoommfslonczewskitorque_ptx_30 = `
.version 4.1
.target sm_30
.address_size 64


.visible .entry addoommfslonczewskitorque(
	.param .u64 addoommfslonczewskitorque_param_0,
	.param .u64 addoommfslonczewskitorque_param_1,
	.param .u64 addoommfslonczewskitorque_param_2,
	.param .u64 addoommfslonczewskitorque_param_3,
	.param .u64 addoommfslonczewskitorque_param_4,
	.param .u64 addoommfslonczewskitorque_param_5,
	.param .u64 addoommfslonczewskitorque_param_6,
	.param .u64 addoommfslonczewskitorque_param_7,
	.param .u64 addoommfslonczewskitorque_param_8,
	.param .u64 addoommfslonczewskitorque_param_9,
	.param .u64 addoommfslonczewskitorque_param_10,
	.param .u64 addoommfslonczewskitorque_param_11,
	.param .f32 addoommfslonczewskitorque_param_12,
	.param .u64 addoommfslonczewskitorque_param_13,
	.param .u64 addoommfslonczewskitorque_param_14,
	.param .u64 addoommfslonczewskitorque_param_15,
	.param .u64 addoommfslonczewskitorque_param_16,
	.param .u64 addoommfslonczewskitorque_param_17,
	.param .u64 addoommfslonczewskitorque_param_18,
	.param .u32 addoommfslonczewskitorque_param_19
)
{
	.reg .pred 	%p<7>;
	.reg .s32 	%r<23>;
	.reg .f32 	%f<103>;
	.reg .s64 	%rd<62>;
	.reg .f64 	%fd<3>;


	ld.param.u64 	%rd2, [addoommfslonczewskitorque_param_0];
	ld.param.u64 	%rd3, [addoommfslonczewskitorque_param_1];
	ld.param.u64 	%rd4, [addoommfslonczewskitorque_param_2];
	ld.param.u64 	%rd5, [addoommfslonczewskitorque_param_3];
	ld.param.u64 	%rd6, [addoommfslonczewskitorque_param_4];
	ld.param.u64 	%rd7, [addoommfslonczewskitorque_param_5];
	ld.param.u64 	%rd8, [addoommfslonczewskitorque_param_6];
	ld.param.u64 	%rd9, [addoommfslonczewskitorque_param_7];
	ld.param.u64 	%rd10, [addoommfslonczewskitorque_param_8];
	ld.param.u64 	%rd11, [addoommfslonczewskitorque_param_9];
	ld.param.u64 	%rd12, [addoommfslonczewskitorque_param_10];
	ld.param.u64 	%rd13, [addoommfslonczewskitorque_param_11];
	ld.param.f32 	%f28, [addoommfslonczewskitorque_param_12];
	ld.param.u64 	%rd14, [addoommfslonczewskitorque_param_13];
	ld.param.u64 	%rd15, [addoommfslonczewskitorque_param_14];
	ld.param.u64 	%rd16, [addoommfslonczewskitorque_param_15];
	ld.param.u64 	%rd17, [addoommfslonczewskitorque_param_16];
	ld.param.u64 	%rd18, [addoommfslonczewskitorque_param_17];
	ld.param.u64 	%rd19, [addoommfslonczewskitorque_param_18];
	ld.param.u32 	%r1, [addoommfslonczewskitorque_param_19];
	mov.u32 	%r2, %nctaid.x;
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	setp.ge.s32	%p1, %r8, %r1;
	@%p1 bra 	BB0_9;

	cvta.to.global.u64 	%rd20, %rd19;
	cvt.s64.s32	%rd21, %r8;
	cvta.to.global.u64 	%rd22, %rd5;
	mul.wide.s32 	%rd23, %r8, 4;
	add.s64 	%rd24, %rd22, %rd23;
	ld.global.f32 	%f1, [%rd24];
	cvta.to.global.u64 	%rd25, %rd6;
	add.s64 	%rd26, %rd25, %rd23;
	ld.global.f32 	%f2, [%rd26];
	cvta.to.global.u64 	%rd27, %rd7;
	add.s64 	%rd28, %rd27, %rd23;
	ld.global.f32 	%f3, [%rd28];
	cvta.to.global.u64 	%rd29, %rd8;
	add.s64 	%rd30, %rd29, %rd23;
	ld.global.f32 	%f4, [%rd30];
	add.s64 	%rd31, %rd20, %rd21;
	ld.global.u8 	%rd1, [%rd31];
	cvta.to.global.u64 	%rd32, %rd9;
	shl.b64 	%rd33, %rd1, 2;
	add.s64 	%rd34, %rd32, %rd33;
	cvta.to.global.u64 	%rd35, %rd10;
	add.s64 	%rd36, %rd35, %rd33;
	cvta.to.global.u64 	%rd37, %rd11;
	add.s64 	%rd38, %rd37, %rd33;
	ld.global.f32 	%f5, [%rd34];
	ld.global.f32 	%f6, [%rd36];
	mul.f32 	%f29, %f6, %f6;
	fma.rn.f32 	%f30, %f5, %f5, %f29;
	ld.global.f32 	%f7, [%rd38];
	fma.rn.f32 	%f31, %f7, %f7, %f30;
	sqrt.rn.f32 	%f8, %f31;
	setp.neu.f32	%p2, %f8, 0f00000000;
	@%p2 bra 	BB0_3;

	mov.f32 	%f101, 0f00000000;
	bra.uni 	BB0_4;

BB0_3:
	rcp.rn.f32 	%f101, %f8;

BB0_4:
	mul.f32 	%f11, %f101, %f5;
	mul.f32 	%f12, %f101, %f6;
	mul.f32 	%f13, %f101, %f7;
	cvta.to.global.u64 	%rd39, %rd12;
	add.s64 	%rd41, %rd39, %rd33;
	ld.global.f32 	%f14, [%rd41];
	setp.eq.f32	%p3, %f14, 0f00000000;
	setp.eq.f32	%p4, %f4, 0f00000000;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	BB0_9;

	cvta.to.global.u64 	%rd42, %rd13;
	add.s64 	%rd44, %rd42, %rd33;
	ld.global.f32 	%f15, [%rd44];
	cvta.to.global.u64 	%rd45, %rd14;
	add.s64 	%rd46, %rd45, %rd33;
	ld.global.f32 	%f16, [%rd46];
	cvta.to.global.u64 	%rd47, %rd15;
	add.s64 	%rd48, %rd47, %rd33;
	ld.global.f32 	%f17, [%rd48];
	cvta.to.global.u64 	%rd49, %rd16;
	add.s64 	%rd50, %rd49, %rd33;
	ld.global.f32 	%f33, [%rd50];
	cvta.to.global.u64 	%rd51, %rd17;
	add.s64 	%rd52, %rd51, %rd33;
	ld.global.f32 	%f34, [%rd52];
	cvta.to.global.u64 	%rd53, %rd18;
	add.s64 	%rd54, %rd53, %rd33;
	ld.global.f32 	%f18, [%rd54];
	add.f32 	%f35, %f28, %f28;
	mul.f32 	%f36, %f35, %f14;
	div.rn.f32 	%f19, %f4, %f36;
	mul.f32 	%f20, %f34, %f34;
	add.f32 	%f37, %f20, 0f3F800000;
	sqrt.rn.f32 	%f21, %f37;
	mul.f32 	%f22, %f33, %f33;
	add.f32 	%f38, %f22, 0f3F800000;
	sqrt.rn.f32 	%f23, %f38;
	add.f32 	%f39, %f20, 0fBF800000;
	sqrt.rn.f32 	%f24, %f39;
	add.f32 	%f40, %f22, 0fBF800000;
	sqrt.rn.f32 	%f25, %f40;
	setp.gt.f32	%p6, %f24, 0f00000000;
	@%p6 bra 	BB0_7;

	mov.f32 	%f102, 0f3F800000;
	bra.uni 	BB0_8;

BB0_7:
	div.rn.f32 	%f102, %f25, %f24;

BB0_8:
	cvt.f64.f32	%fd1, %f19;
	mul.f64 	%fd2, %fd1, 0d3CC7B6EF14E9250C;
	cvt.rn.f32.f64	%f42, %fd2;
	div.rn.f32 	%f43, %f21, %f23;
	mul.f32 	%f44, %f16, %f22;
	mul.f32 	%f45, %f44, %f43;
	mul.f32 	%f46, %f17, %f20;
	mul.f32 	%f47, %f46, %f102;
	add.f32 	%f48, %f45, %f47;
	sub.f32 	%f49, %f45, %f47;
	mul.f32 	%f50, %f12, %f2;
	fma.rn.f32 	%f51, %f11, %f1, %f50;
	fma.rn.f32 	%f52, %f13, %f3, %f51;
	mul.f32 	%f53, %f24, %f25;
	mul.f32 	%f54, %f53, %f52;
	mul.f32 	%f55, %f21, %f23;
	add.f32 	%f56, %f55, %f54;
	sub.f32 	%f57, %f55, %f54;
	div.rn.f32 	%f58, %f48, %f56;
	div.rn.f32 	%f59, %f49, %f57;
	sub.f32 	%f60, %f58, %f59;
	mul.f32 	%f61, %f42, %f60;
	fma.rn.f32 	%f62, %f15, %f15, 0f3F800000;
	rcp.rn.f32 	%f63, %f62;
	mul.f32 	%f64, %f42, %f18;
	mul.f32 	%f65, %f15, %f64;
	sub.f32 	%f66, %f61, %f65;
	mul.f32 	%f67, %f63, %f66;
	mul.f32 	%f68, %f15, %f61;
	sub.f32 	%f69, %f64, %f68;
	mul.f32 	%f70, %f63, %f69;
	mul.f32 	%f71, %f13, %f2;
	mul.f32 	%f72, %f12, %f3;
	sub.f32 	%f73, %f72, %f71;
	mul.f32 	%f74, %f11, %f3;
	mul.f32 	%f75, %f13, %f1;
	sub.f32 	%f76, %f75, %f74;
	mul.f32 	%f77, %f12, %f1;
	mul.f32 	%f78, %f11, %f2;
	sub.f32 	%f79, %f78, %f77;
	mul.f32 	%f80, %f2, %f79;
	mul.f32 	%f81, %f3, %f76;
	sub.f32 	%f82, %f80, %f81;
	mul.f32 	%f83, %f3, %f73;
	mul.f32 	%f84, %f1, %f79;
	sub.f32 	%f85, %f83, %f84;
	mul.f32 	%f86, %f1, %f76;
	mul.f32 	%f87, %f2, %f73;
	sub.f32 	%f88, %f86, %f87;
	mul.f32 	%f89, %f70, %f73;
	fma.rn.f32 	%f90, %f67, %f82, %f89;
	cvta.to.global.u64 	%rd55, %rd2;
	mul.wide.s32 	%rd56, %r8, 4;
	add.s64 	%rd57, %rd55, %rd56;
	ld.global.f32 	%f91, [%rd57];
	add.f32 	%f92, %f91, %f90;
	st.global.f32 	[%rd57], %f92;
	mul.f32 	%f93, %f70, %f76;
	fma.rn.f32 	%f94, %f67, %f85, %f93;
	cvta.to.global.u64 	%rd58, %rd3;
	add.s64 	%rd59, %rd58, %rd56;
	ld.global.f32 	%f95, [%rd59];
	add.f32 	%f96, %f95, %f94;
	st.global.f32 	[%rd59], %f96;
	mul.f32 	%f97, %f70, %f79;
	fma.rn.f32 	%f98, %f67, %f88, %f97;
	cvta.to.global.u64 	%rd60, %rd4;
	add.s64 	%rd61, %rd60, %rd56;
	ld.global.f32 	%f99, [%rd61];
	add.f32 	%f100, %f99, %f98;
	st.global.f32 	[%rd61], %f100;

BB0_9:
	ret;
}


`
   addoommfslonczewskitorque_ptx_35 = `
.version 4.1
.target sm_35
.address_size 64


.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.visible .entry addoommfslonczewskitorque(
	.param .u64 addoommfslonczewskitorque_param_0,
	.param .u64 addoommfslonczewskitorque_param_1,
	.param .u64 addoommfslonczewskitorque_param_2,
	.param .u64 addoommfslonczewskitorque_param_3,
	.param .u64 addoommfslonczewskitorque_param_4,
	.param .u64 addoommfslonczewskitorque_param_5,
	.param .u64 addoommfslonczewskitorque_param_6,
	.param .u64 addoommfslonczewskitorque_param_7,
	.param .u64 addoommfslonczewskitorque_param_8,
	.param .u64 addoommfslonczewskitorque_param_9,
	.param .u64 addoommfslonczewskitorque_param_10,
	.param .u64 addoommfslonczewskitorque_param_11,
	.param .f32 addoommfslonczewskitorque_param_12,
	.param .u64 addoommfslonczewskitorque_param_13,
	.param .u64 addoommfslonczewskitorque_param_14,
	.param .u64 addoommfslonczewskitorque_param_15,
	.param .u64 addoommfslonczewskitorque_param_16,
	.param .u64 addoommfslonczewskitorque_param_17,
	.param .u64 addoommfslonczewskitorque_param_18,
	.param .u32 addoommfslonczewskitorque_param_19
)
{
	.reg .pred 	%p<7>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<9>;
	.reg .f32 	%f<103>;
	.reg .s64 	%rd<63>;
	.reg .f64 	%fd<3>;


	ld.param.u64 	%rd3, [addoommfslonczewskitorque_param_0];
	ld.param.u64 	%rd4, [addoommfslonczewskitorque_param_1];
	ld.param.u64 	%rd5, [addoommfslonczewskitorque_param_2];
	ld.param.u64 	%rd6, [addoommfslonczewskitorque_param_3];
	ld.param.u64 	%rd7, [addoommfslonczewskitorque_param_4];
	ld.param.u64 	%rd8, [addoommfslonczewskitorque_param_5];
	ld.param.u64 	%rd9, [addoommfslonczewskitorque_param_6];
	ld.param.u64 	%rd10, [addoommfslonczewskitorque_param_7];
	ld.param.u64 	%rd11, [addoommfslonczewskitorque_param_8];
	ld.param.u64 	%rd12, [addoommfslonczewskitorque_param_9];
	ld.param.u64 	%rd13, [addoommfslonczewskitorque_param_10];
	ld.param.u64 	%rd14, [addoommfslonczewskitorque_param_11];
	ld.param.f32 	%f28, [addoommfslonczewskitorque_param_12];
	ld.param.u64 	%rd15, [addoommfslonczewskitorque_param_13];
	ld.param.u64 	%rd16, [addoommfslonczewskitorque_param_14];
	ld.param.u64 	%rd17, [addoommfslonczewskitorque_param_15];
	ld.param.u64 	%rd18, [addoommfslonczewskitorque_param_16];
	ld.param.u64 	%rd19, [addoommfslonczewskitorque_param_17];
	ld.param.u64 	%rd20, [addoommfslonczewskitorque_param_18];
	ld.param.u32 	%r2, [addoommfslonczewskitorque_param_19];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB5_9;

	cvta.to.global.u64 	%rd21, %rd12;
	cvta.to.global.u64 	%rd22, %rd11;
	cvta.to.global.u64 	%rd23, %rd10;
	cvta.to.global.u64 	%rd24, %rd20;
	cvta.to.global.u64 	%rd25, %rd9;
	cvta.to.global.u64 	%rd26, %rd8;
	cvta.to.global.u64 	%rd27, %rd7;
	cvta.to.global.u64 	%rd28, %rd6;
	cvt.s64.s32	%rd1, %r1;
	mul.wide.s32 	%rd29, %r1, 4;
	add.s64 	%rd30, %rd28, %rd29;
	ld.global.nc.f32 	%f1, [%rd30];
	add.s64 	%rd31, %rd27, %rd29;
	ld.global.nc.f32 	%f2, [%rd31];
	add.s64 	%rd32, %rd26, %rd29;
	ld.global.nc.f32 	%f3, [%rd32];
	add.s64 	%rd33, %rd25, %rd29;
	ld.global.nc.f32 	%f4, [%rd33];
	add.s64 	%rd34, %rd24, %rd1;
	ld.global.nc.u8 	%rs1, [%rd34];
	cvt.u64.u16	%rd35, %rs1;
	and.b64  	%rd2, %rd35, 255;
	shl.b64 	%rd36, %rd2, 2;
	add.s64 	%rd37, %rd23, %rd36;
	add.s64 	%rd38, %rd22, %rd36;
	add.s64 	%rd39, %rd21, %rd36;
	ld.global.nc.f32 	%f5, [%rd37];
	ld.global.nc.f32 	%f6, [%rd38];
	mul.f32 	%f29, %f6, %f6;
	fma.rn.f32 	%f30, %f5, %f5, %f29;
	ld.global.nc.f32 	%f7, [%rd39];
	fma.rn.f32 	%f31, %f7, %f7, %f30;
	sqrt.rn.f32 	%f8, %f31;
	setp.neu.f32	%p2, %f8, 0f00000000;
	@%p2 bra 	BB5_3;

	mov.f32 	%f101, 0f00000000;
	bra.uni 	BB5_4;

BB5_3:
	rcp.rn.f32 	%f101, %f8;

BB5_4:
	cvta.to.global.u64 	%rd40, %rd13;
	add.s64 	%rd42, %rd40, %rd36;
	ld.global.nc.f32 	%f11, [%rd42];
	setp.eq.f32	%p3, %f11, 0f00000000;
	setp.eq.f32	%p4, %f4, 0f00000000;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	BB5_9;

	cvta.to.global.u64 	%rd43, %rd19;
	cvta.to.global.u64 	%rd44, %rd18;
	cvta.to.global.u64 	%rd45, %rd17;
	cvta.to.global.u64 	%rd46, %rd16;
	cvta.to.global.u64 	%rd47, %rd15;
	cvta.to.global.u64 	%rd48, %rd14;
	mul.f32 	%f12, %f101, %f5;
	mul.f32 	%f13, %f101, %f6;
	mul.f32 	%f14, %f101, %f7;
	add.s64 	%rd50, %rd48, %rd36;
	ld.global.nc.f32 	%f15, [%rd50];
	add.s64 	%rd51, %rd47, %rd36;
	ld.global.nc.f32 	%f16, [%rd51];
	add.s64 	%rd52, %rd46, %rd36;
	ld.global.nc.f32 	%f17, [%rd52];
	add.s64 	%rd53, %rd45, %rd36;
	ld.global.nc.f32 	%f33, [%rd53];
	add.s64 	%rd54, %rd44, %rd36;
	ld.global.nc.f32 	%f34, [%rd54];
	add.s64 	%rd55, %rd43, %rd36;
	ld.global.nc.f32 	%f18, [%rd55];
	add.f32 	%f35, %f28, %f28;
	mul.f32 	%f36, %f35, %f11;
	div.rn.f32 	%f19, %f4, %f36;
	mul.f32 	%f20, %f34, %f34;
	add.f32 	%f37, %f20, 0f3F800000;
	sqrt.rn.f32 	%f21, %f37;
	mul.f32 	%f22, %f33, %f33;
	add.f32 	%f38, %f22, 0f3F800000;
	sqrt.rn.f32 	%f23, %f38;
	add.f32 	%f39, %f20, 0fBF800000;
	sqrt.rn.f32 	%f24, %f39;
	add.f32 	%f40, %f22, 0fBF800000;
	sqrt.rn.f32 	%f25, %f40;
	setp.gt.f32	%p6, %f24, 0f00000000;
	@%p6 bra 	BB5_7;

	mov.f32 	%f102, 0f3F800000;
	bra.uni 	BB5_8;

BB5_7:
	div.rn.f32 	%f102, %f25, %f24;

BB5_8:
	cvta.to.global.u64 	%rd56, %rd5;
	cvta.to.global.u64 	%rd57, %rd4;
	cvta.to.global.u64 	%rd58, %rd3;
	cvt.f64.f32	%fd1, %f19;
	mul.f64 	%fd2, %fd1, 0d3CC7B6EF14E9250C;
	cvt.rn.f32.f64	%f42, %fd2;
	div.rn.f32 	%f43, %f21, %f23;
	mul.f32 	%f44, %f16, %f22;
	mul.f32 	%f45, %f44, %f43;
	mul.f32 	%f46, %f17, %f20;
	mul.f32 	%f47, %f46, %f102;
	add.f32 	%f48, %f45, %f47;
	sub.f32 	%f49, %f45, %f47;
	mul.f32 	%f50, %f13, %f2;
	fma.rn.f32 	%f51, %f12, %f1, %f50;
	fma.rn.f32 	%f52, %f14, %f3, %f51;
	mul.f32 	%f53, %f24, %f25;
	mul.f32 	%f54, %f53, %f52;
	mul.f32 	%f55, %f21, %f23;
	add.f32 	%f56, %f55, %f54;
	sub.f32 	%f57, %f55, %f54;
	div.rn.f32 	%f58, %f48, %f56;
	div.rn.f32 	%f59, %f49, %f57;
	sub.f32 	%f60, %f58, %f59;
	mul.f32 	%f61, %f42, %f60;
	fma.rn.f32 	%f62, %f15, %f15, 0f3F800000;
	rcp.rn.f32 	%f63, %f62;
	mul.f32 	%f64, %f42, %f18;
	mul.f32 	%f65, %f15, %f64;
	sub.f32 	%f66, %f61, %f65;
	mul.f32 	%f67, %f63, %f66;
	mul.f32 	%f68, %f15, %f61;
	sub.f32 	%f69, %f64, %f68;
	mul.f32 	%f70, %f63, %f69;
	mul.f32 	%f71, %f14, %f2;
	mul.f32 	%f72, %f13, %f3;
	sub.f32 	%f73, %f72, %f71;
	mul.f32 	%f74, %f12, %f3;
	mul.f32 	%f75, %f14, %f1;
	sub.f32 	%f76, %f75, %f74;
	mul.f32 	%f77, %f13, %f1;
	mul.f32 	%f78, %f12, %f2;
	sub.f32 	%f79, %f78, %f77;
	mul.f32 	%f80, %f2, %f79;
	mul.f32 	%f81, %f3, %f76;
	sub.f32 	%f82, %f80, %f81;
	mul.f32 	%f83, %f3, %f73;
	mul.f32 	%f84, %f1, %f79;
	sub.f32 	%f85, %f83, %f84;
	mul.f32 	%f86, %f1, %f76;
	mul.f32 	%f87, %f2, %f73;
	sub.f32 	%f88, %f86, %f87;
	mul.f32 	%f89, %f70, %f73;
	fma.rn.f32 	%f90, %f67, %f82, %f89;
	shl.b64 	%rd59, %rd1, 2;
	add.s64 	%rd60, %rd58, %rd59;
	ld.global.f32 	%f91, [%rd60];
	add.f32 	%f92, %f91, %f90;
	st.global.f32 	[%rd60], %f92;
	mul.f32 	%f93, %f70, %f76;
	fma.rn.f32 	%f94, %f67, %f85, %f93;
	add.s64 	%rd61, %rd57, %rd59;
	ld.global.f32 	%f95, [%rd61];
	add.f32 	%f96, %f95, %f94;
	st.global.f32 	[%rd61], %f96;
	mul.f32 	%f97, %f70, %f79;
	fma.rn.f32 	%f98, %f67, %f88, %f97;
	add.s64 	%rd62, %rd56, %rd59;
	ld.global.f32 	%f99, [%rd62];
	add.f32 	%f100, %f99, %f98;
	st.global.f32 	[%rd62], %f100;

BB5_9:
	ret;
}


`
 )
